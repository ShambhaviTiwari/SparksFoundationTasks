# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FrrnLavTbqfM8IU4hx4druY8n_thbtvM

#                                                             **SHAMBHAVI TIWARI**
#                                                                      **TASK 1** -Linear Regression

**Importing essential Libraries**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  
# %matplotlib inline

"""**Importing dataset**"""

df = pd.read_csv('https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv')

df.head()

"""**Plotting graph between Hours and Percentage**"""

df.plot(x = 'Hours',y = 'Scores',style = 'o')
plt.title('Hours vs Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

X = df.iloc[:, :-1].values  
y = df.iloc[:, 1].values

"""**Splitting data into training and testing sets**"""

from sklearn.model_selection import train_test_split
train_X,val_X,train_y,val_y = train_test_split(X,y,random_state = 0)

"""**Importing the Linear Resression Model from the scikit-learn Library**"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(train_X,train_y)

"""**Prediciting the results**"""

predicts = regressor.predict(val_X)
df_check = pd.DataFrame({'Actual': val_y, 'Predicted': predicts})
df_check

"""**Predicting the Score based on Hours, i.e. 9.25 hours**"""

hours =[[9.25]]
own_pred = regressor.predict(hours)
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred[0]))

from sklearn import metrics  
metrics.mean_absolute_error(val_y,predicts)

"""**Visualising the test set results**"""

line = regressor.coef_*X+regressor.intercept_

# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line);
plt.show()