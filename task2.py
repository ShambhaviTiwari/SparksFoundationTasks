# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fEN2Q5ym7eObGvdhkqW7vwcVp2dD951c

**SHAMBHAVI TIWARI**


**Task 2-Unsupervisied Learning**

**Importing Required Libraries**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from matplotlib import pyplot as plt
# %matplotlib inline
from sklearn import datasets

"""**Loading the Dataset**"""

iris = datasets.load_iris()
df = pd.DataFrame(iris.data,columns=iris.feature_names)

"""**Getting the overview of the data**"""

df.head()

X = df.iloc[:,[0,1,2,3]].values

"""**Deciding the number of clusters with the help of the elbow method**"""

sse = []
for i  in range(1,11):
  kmeans =  KMeans(n_clusters = i, init = 'k-means++', 
                    max_iter = 300, n_init = 10, random_state = 0)
  kmeans.fit(X)
  sse.append(kmeans.inertia_)


plt.plot(range(1,11),sse)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('SSE') # Within cluster sum of squares
plt.show()

"""**The optimum amount of clusters is 3 according to the elbow method,then further implementing K-Means with 3 clusters**"""

kmeans =  KMeans(n_clusters = 3, init = 'k-means++', 
                    max_iter = 300, n_init = 10, random_state = 0)
 y = kmeans.fit_predict(X)

"""**Scatter plot representing the centroids and the predictions**"""

plt.scatter(X[y==0,0],X[y==0,1],s = 50,c = 'red',label = 'Iris-setosa')
plt.scatter(X[y==1,0],X[y==1,1],s = 50,c = 'blue',label = 'Iris-versicolour')
plt.scatter(X[y==2,0],X[y==2,1],s = 50,c = 'green',label = 'Iris-virginica')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 50, c = 'yellow', label = 'Centroids')

plt.legend()